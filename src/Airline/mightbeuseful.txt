package Airline;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;

import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.DefaultListModel;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.border.TitledBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.border.EtchedBorder;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import javax.swing.ListSelectionModel;
import javax.swing.border.LineBorder;

public class BookFlight extends JFrame {
	
	private JPanel contentPane;
	private JTextField username1;
	private JPasswordField password1;
	private JPasswordField confirm;
	 Connection con;
	 PreparedStatement pst1;
	 private JTextField textField;
	 private JTable table;
	 
	 //Establish connection to DB
	 public static Connection getConnection() throws URISyntaxException, SQLException {
		    URI dbUri = new URI("postgres://sddbvrkvkbkbcz:61bdd3cfd6dcad474f70747d694116ca58f7cef4cff3986bdba0e7fa15a54317@ec2-44-209-158-64.compute-1.amazonaws.com:5432/dovqiu3kter09");
		    
		    Connection conn;
		    String username = dbUri.getUserInfo().split(":")[0];
		    String password = dbUri.getUserInfo().split(":")[1];
		    String dbUrl = "jdbc:postgresql://" + dbUri.getHost() + dbUri.getPath();
		    conn=DriverManager.getConnection(dbUrl, username, password);

		    return conn;
		}
	 
	 public static void main(String[] args) {
		
		 BookFlight bookflight = new BookFlight();
	}
	 
	 
	 public BookFlight() {
		 
	        getContentPane().setLayout(null);
	       
	        JScrollPane scrollPane = new JScrollPane();
	        scrollPane.setBounds(105, 152, 351, 306);
	        getContentPane().add(scrollPane);
	        
	        JPanel panel = new JPanel();
	        scrollPane.setRowHeaderView(panel);
	        panel.setLayout(null);
	        
	        table = new JTable() {
	        	
	        	@Override
	        	   public boolean isCellEditable(int row, int column) {       
	        	       return false; // or a condition at your choice with row and column
	        	   }
	        };
	        table.setRowSelectionAllowed(true);
	        table.setCellSelectionEnabled(false);
	        table.setShowHorizontalLines(true);
	        table.setForeground(new Color(0, 0, 0));
	        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
	        ListSelectionModel model = table.getSelectionModel();
	        
	        model.addListSelectionListener(new ListSelectionListener() {

				@Override
				public void valueChanged(ListSelectionEvent e) {
					
					
					
					if(e.getValueIsAdjusting()) {
						
						return;
					
					} 
					
					ListSelectionModel lsm = (ListSelectionModel) e.getSource();
					
					if(lsm.isSelectionEmpty()) {
						
						JOptionPane.showMessageDialog(null, "No selection!");
					}
				}
	        });
	        
	        table.setBorder(new LineBorder(new Color(0, 0, 0)));
	        table.setModel(new DefaultTableModel(
	        	new Object[][] {
	        	},
	        	new String[] {
	        		"destination", "flight number", "date", "departure", "arrival"
	        	}
	        ));
	        scrollPane.setViewportView(table);
	        
	        JLabel lblNewLabel = new JLabel("search flight");
	        lblNewLabel.setBounds(247, 48, 59, 14);
	        getContentPane().add(lblNewLabel);
	        
	        textField = new JTextField();
	        textField.setBounds(230, 73, 86, 20);
	        getContentPane().add(textField);
	        textField.setColumns(10);
	       
	        JButton btnNewButton_1 = new JButton("Confirm");
	        btnNewButton_1.setBounds(230, 469, 89, 23);
	        getContentPane().add(btnNewButton_1);
	        btnNewButton_1.addActionListener(new ActionListener() {
	        	
	        	public void actionPerformed(ActionEvent e) {
					
					int index  = table.getSelectedRow();
				}
	        });
	        
	        JButton btnNewButton = new JButton("search");
	        btnNewButton.setBounds(230, 104, 89, 23);
	        getContentPane().add(btnNewButton);
	        btnNewButton.addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {
					
					String destination = textField.getText();
					
					try {
			    		con = getConnection();	    		
			    		//Selects data from users table
			    		String query1="select * from flight where destination =?";
						pst1= con.prepareStatement(query1);
						pst1.setString(1,  destination);
						ResultSet rs1 = pst1.executeQuery();
						DefaultTableModel model = (DefaultTableModel) table.getModel();
						
						while(rs1.next()) {
							
							String d = rs1.getString("destination");
							String fid = rs1.getString("flightnumber");
							String date = rs1.getString("departuredate");
							String dtime = rs1.getString("departuretime");
							String arrive = rs1.getString("arrivaltime");
							
							model.addRow(new Object[]{d, fid, date, dtime, arrive});
						}
						
			    	}catch(Exception e1) {
						JOptionPane.showMessageDialog(null, "error");
					}
				}
	        });
	 
	        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	        setTitle("Customers");
	        setBounds(100, 150, 563, 553);
	        setVisible(true);
	 }
}
